"""feats-races

Revision ID: 3ae500d90fce
Revises: 24b119e8a083
Create Date: 2023-09-05 17:38:00.104602

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '3ae500d90fce'
down_revision: Union[str, None] = '24b119e8a083'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('feat',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('prerequisite', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('race',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('class_feats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('classId', sa.Integer(), nullable=True),
    sa.Column('featId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['classId'], ['class.id'], ),
    sa.ForeignKeyConstraint(['featId'], ['feat.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('race_feats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('raceId', sa.Integer(), nullable=True),
    sa.Column('featId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['featId'], ['feat.id'], ),
    sa.ForeignKeyConstraint(['raceId'], ['race.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('subclass_feats',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('subclassId', sa.Integer(), nullable=True),
    sa.Column('featId', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['featId'], ['feat.id'], ),
    sa.ForeignKeyConstraint(['subclassId'], ['subclass.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('character', sa.Column('classId', sa.Integer(), nullable=True))
    op.add_column('character', sa.Column('subclassId', sa.Integer(), nullable=True))
    op.drop_constraint('character_userId_fkey', 'character', type_='foreignkey')
    op.drop_column('character', 'subClassName')
    op.drop_column('character', 'className')
    op.drop_column('character', 'userId')
    op.create_foreign_key(None, 'subclass', 'class', ['classId'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'subclass', type_='foreignkey')
    op.add_column('character', sa.Column('userId', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('character', sa.Column('className', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('character', sa.Column('subClassName', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_foreign_key('character_userId_fkey', 'character', 'user', ['userId'], ['id'])
    op.drop_column('character', 'subclassId')
    op.drop_column('character', 'classId')
    op.drop_table('subclass_feats')
    op.drop_table('race_feats')
    op.drop_table('class_feats')
    op.drop_table('race')
    op.drop_table('feat')
    # ### end Alembic commands ###
